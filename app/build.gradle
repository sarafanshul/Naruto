
apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"
apply plugin: "kotlin-parcelize"

apply plugin: "dagger.hilt.android.plugin"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.projectdelta.naruto"
        minSdkVersion 28
        targetSdkVersion 30
        versionCode 1
        versionName "1.0.1"

        buildConfigField "String", "API_BASE_URL", "\""+getApiKeys()+"\""

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.incremental":"true"]
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        buildFeatures {
            viewBinding = true
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kapt {
        javacOptions {
            // issue in kotlin v-1.5.20 see this https://stackoverflow.com/a/68233842/11718077
            // These options are normally set automatically via the Hilt Gradle plugin, but we
            // set them manually to workaround a bug in the Kotlin 1.5.20
            option("-Adagger.fastInit=ENABLED")
            option("-Adagger.hilt.android.internal.disableAndroidSuperclassValidation=true")
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    signingConfigs {
        release {

            storeFile = file("keystore/NarutoKeyStore.jks")
            storePassword System.getenv("SIGNING_STORE_PASSWORD")
            keyAlias System.getenv("SIGNING_KEY_ALIAS")
            keyPassword System.getenv("SIGNING_KEY_PASSWORD")
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

def getApiKeys() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("API_BASE_URL")
}

dependencies {

    //noinspection GradleDependency
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    //noinspection GradleDependency
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0'

    implementation 'com.google.code.gson:gson:2.8.7'

    // hilt
    implementation("com.google.dagger:hilt-android:$hilt_version")
    kapt ("com.google.dagger:dagger-compiler:$hilt_version")
    kapt("com.google.dagger:hilt-android-compiler:$hilt_version")

    // glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // webView
    implementation "androidx.browser:browser:1.3.0"

    // Viewpager
    implementation "androidx.viewpager2:viewpager2:1.0.0"

    // Material Dialogs
    def material_afollestad_version = "3.3.0"
    implementation "com.afollestad.material-dialogs:core:$material_afollestad_version"
    implementation "com.afollestad.material-dialogs:bottomsheets:$material_afollestad_version"
    implementation "com.afollestad.material-dialogs:lifecycle:$material_afollestad_version"

    // logging
    implementation 'com.jakewharton.timber:timber:5.0.1'

    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"
    // optional - Paging 3 Integration
    implementation "androidx.room:room-paging:2.4.0-alpha04"

    def retrofit_ver = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_ver"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_ver"
    implementation "com.squareup.okhttp3:okhttp:4.9.0"
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.2"

    def lifecycle_ver = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_ver"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_ver"
    //noinspection GradleDependency
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_ver"

    def fragment_version = "1.4.0-alpha03"
    //noinspection GradleDependency
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    //noinspection GradleDependency
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

    // Navigation components
    def nav_version = "2.4.0-alpha01"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    def paging_version = "3.0.1"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'
}